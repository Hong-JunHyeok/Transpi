{"version":3,"sources":["components/Common/Footer/Footer.jsx","lib/getCurrentYear.js","components/Common/NavBar/NavBar.jsx","lib/axiosRequest.js","lib/queryStyle.js","components/Common/Button/Button.jsx","components/App.js","lib/getAllLangList.js","Root.js","index.js"],"names":["FooterDiv","styled","div","props","color","CopyrightDiv","HighLight","span","Footer","intro","Date","getFullYear","NavBarDiv","Title","NavBar","title","axiosRequest","query","a","axios","get","URL","headers","Authorization","API_KEY","response","data","queryStyle","src_lang","target_lang","ButtonDiv","buttonColor","width","height","Button","children","onClick","Body","TransBox","TransBoxHeader","TransBoxLangDiv","TransBoxLangInput","select","TransBoxBody","TransBoxTextInput","textarea","TransBoxButtonDiv","App","useState","srcLang","setSrcLang","targetLang","setTargetLang","setQuery","result","setResult","langData","lang","map","item","index","value","useEffect","request","console","log","translated_text","onChangeLang","event","target","name","style","fontWeight","marginBottom","onChange","borderRight","readOnly","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6mBAiBA,I,IAAMA,EAAYC,IAAOC,IAAV,0NACS,SAACC,GAAD,OAAWA,EAAMC,SAcnCC,GALWJ,IAAOC,IAAV,2EAKOD,IAAOC,IAAV,kDAGZI,EAAYL,IAAOM,KAAV,qEACF,SAACJ,GAAD,OAAWA,EAAMC,SAIfI,EApCf,YACI,OADuB,EAATC,MAEV,cAACT,EAAD,CAAWI,MAAO,UAAlB,SAEI,eAACC,EAAD,8BCPD,IAAIK,MAAOC,cDQuB,IAC7B,cAACL,EAAD,CAAWF,MAAO,UAAlB,6CAFJ,8BEGZ,I,EAAMQ,EAAYX,IAAOC,IAAV,iHAGS,SAACC,GAAD,OAAWA,EAAMC,SAGnCS,EAAQZ,IAAOC,IAAV,kPACE,SAACC,GAAD,OAAWA,EAAMC,SAUfU,EAzBf,YAA4B,IAAVC,EAAS,EAATA,MACd,OACI,cAACH,EAAD,CAAWR,MAAO,UAAlB,SACI,cAACS,EAAD,CAAOT,MAAO,UAAd,SAA0BW,O,iCCHzBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAAN,UAAaC,IAAb,YAAoBJ,GAAS,CAChDK,QAAS,CACLC,cAAc,WAAD,OAAaC,QAHV,cAClBC,EADkB,OAMlBC,EAAOD,EAASC,KANE,kBAOjBA,GAPiB,2CAAH,sDCHZC,EAAa,SAACC,EAAUC,EAAaZ,GAE9C,MADiB,mBAAeW,EAAf,wBAAuCC,EAAvC,kBAA4DZ,I,QCYjF,I,gBAAMa,EAAY7B,IAAOC,IAAV,6RACS,SAACC,GAAD,OAAWA,EAAM4B,aAAe,aAC3C,SAAC5B,GAAD,OAAWA,EAAM6B,OAAS,WACzB,SAAC7B,GAAD,OAAWA,EAAM8B,QAAU,UAK5B,SAAC9B,GAAD,OAAWA,EAAMC,OAAS,aAOxB8B,EAxBf,YAAwC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACxB,OAAO,cAACN,EAAD,CAAWM,QAASA,EAApB,SAA8BD,KC8FzC,IAAME,EAAOpC,IAAOC,IAAV,uHAOJoC,EAAWrC,IAAOC,IAAV,8HAMRqC,EAAiBtC,IAAOC,IAAV,2HAMdsC,EAAkBvC,IAAOC,IAAV,mJAOfuC,EAAoBxC,IAAOyC,OAAV,uHAMjBC,EAAe1C,IAAOC,IAAV,mEAIZ0C,EAAoB3C,IAAO4C,SAAV,sMAUjBC,EAAoB7C,IAAOC,IAAV,2HAMR6C,EA3If,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACJC,EADI,KACKC,EADL,OAEyBF,mBAAS,MAFlC,mBAEJG,EAFI,KAEQC,EAFR,OAGeJ,mBAAS,gBAHxB,mBAGJ/B,EAHI,KAGGoC,EAHH,OAIiBL,mBAAS,IAJ1B,mBAIJM,EAJI,KAIIC,EAJJ,KAMLC,ECfCC,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACZ,wBAAQC,MAAK,UAAKF,GAAlB,SACKA,GAD0BC,MDenCE,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAO,uCAAG,4BAAA7C,EAAA,sEACOF,EAAaW,EAAWsB,EAASE,EAAYlC,IADpD,OACNS,EADM,OAEZsC,QAAQC,IAAIvC,GACZ6B,EAAU7B,EAAKwC,iBAHH,2CAAH,qDAMPC,EAAe,SAACC,GAAW,IAAD,EACJA,EAAMC,OAAtBR,EADoB,EACpBA,MAAOS,EADa,EACbA,KACfN,QAAQC,IAAIJ,EAAOS,GACN,QAATA,EACApB,EAAWW,GACK,WAATS,GACPlB,EAAcS,IAOtB,OACI,qCACI,cAAC,EAAD,CAAQ9C,MAAO,YACf,eAACsB,EAAD,WACI,eAACC,EAAD,WACI,eAACC,EAAD,WACI,eAACC,EAAD,WACI,qBACI+B,MAAO,CACHC,WAAY,OACZC,aAAc,UAHtB,6CAQA,cAAChC,EAAD,CAAmBoB,MAAOZ,EAASyB,SAAUP,EAAcG,KAAK,MAAhE,SACKd,OAGT,eAAChB,EAAD,WACI,qBACI+B,MAAO,CACHC,WAAY,OACZC,aAAc,UAHtB,6CAQA,cAAChC,EAAD,CACIoB,MAAOV,EACPuB,SAAUP,EACVG,KAAK,SAHT,SAKKd,UAIb,eAACb,EAAD,WACI,cAACC,EAAD,CAAmBiB,MAAO5C,EAAOyD,SA1C/B,SAACN,GAAW,IACtBP,EAAUO,EAAMC,OAAhBR,MACRR,EAASQ,MAyCO,cAACjB,EAAD,CACI2B,MAAO,CACHI,YAAa,QAEjBC,UAAQ,EACRf,MAAOP,UAInB,cAACR,EAAD,UACI,cAAC,EAAD,CAAQV,QAAS,kBAAM2B,KAAvB,2CAGR,cAAC,EAAD,CAAQtD,MAAOA,UEnFZoE,OARf,WACI,OACI,mCACI,cAAC,EAAD,OCFZC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.8c7f5c66.chunk.js","sourcesContent":["import { getCurrentYear } from \"lib/getCurrentYear\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nfunction Footer({ intro }) {\n    return (\n        <FooterDiv color={\"#353646\"}>\n            {/* <IntroDiv>{intro}</IntroDiv> */}\n            <CopyrightDiv>\n                Copyrightⓒ{getCurrentYear()}{\" \"}\n                <HighLight color={\"#ffe812\"}>Hong-JunHyeok X Kakao Developer</HighLight> All rights\n                reserved.\n            </CopyrightDiv>\n        </FooterDiv>\n    )\n}\n\nconst FooterDiv = styled.div`\n    background-color: ${(props) => props.color};\n    width: 100%;\n    height: 10vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    padding: 4rem;\n`\nconst IntroDiv = styled.div`\n    color: #f2f2f2;\n    margin-bottom: 1rem;\n`\n\nconst CopyrightDiv = styled.div`\n    color: #f2f2f2;\n`\nconst HighLight = styled.span`\n    color: ${(props) => props.color};\n    font-weight: bold;\n`\n\nexport default Footer\n","export const getCurrentYear = () => {\n    return new Date().getFullYear()\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nfunction NavBar({ title }) {\n    return (\n        <NavBarDiv color={\"#353646\"}>\n            <Title color={\"#ffe812\"}>{title}</Title>\n        </NavBarDiv>\n    )\n}\n\nconst NavBarDiv = styled.div`\n    width: 100%;\n    height: 10vh;\n    background-color: ${(props) => props.color};\n    padding: 1rem;\n`\nconst Title = styled.div`\n    color: ${(props) => props.color};\n    font-size: 2rem;\n    font-weight: bold;\n    ::after {\n        content: \"심플하게 번역하자!\";\n        font-size: 12px;\n        font-weight: lighter;\n    }\n`\n\nexport default NavBar\n","import { API_KEY, URL } from \"config/config.json\"\nimport axios from \"axios\"\n\nexport const axiosRequest = async (query) => {\n    const response = await axios.get(`${URL}?${query}`, {\n        headers: {\n            Authorization: `KakaoAK ${API_KEY}`,\n        },\n    })\n    const data = response.data\n    return data\n}\n","export const queryStyle = (src_lang, target_lang, query) => {\n    const styledQuery = `src_lang=${src_lang}&target_lang=${target_lang}&query=${query}`\n    return styledQuery\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nfunction Button({ children, onClick }) {\n    return <ButtonDiv onClick={onClick}>{children}</ButtonDiv>\n}\n\nButton.propTypes = {\n    children: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n}\n\nconst ButtonDiv = styled.div`\n    background-color: ${(props) => props.buttonColor || \"#459de6\"};\n    width: ${(props) => props.width || \"100px\"};\n    height: ${(props) => props.height || \"60px\"};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n    color: ${(props) => props.color || \"#f2f2f2\"};\n    cursor: pointer;\n    :hover {\n        filter: brightness(95%);\n    }\n`\n\nexport default Button\n","import React, { useEffect, useState } from \"react\"\nimport \"styles/reset.css\"\nimport Footer from \"./Common/Footer/Footer\"\nimport NavBar from \"./Common/NavBar/NavBar\"\nimport { intro } from \"data/footerInfo.json\"\nimport styled from \"styled-components\"\nimport { axiosRequest } from \"lib/axiosRequest\"\nimport { queryStyle } from \"lib/queryStyle\"\nimport { CgArrowsExchange } from \"react-icons/cg\"\nimport { getAllLangList } from \"lib/getAllLangList\"\nimport Button from \"components/Common/Button\"\n\nfunction App() {\n    const [srcLang, setSrcLang] = useState(\"kr\")\n    const [targetLang, setTargetLang] = useState(\"en\")\n    const [query, setQuery] = useState(\"안녕\")\n    const [result, setResult] = useState(\"\")\n\n    const langData = getAllLangList()\n    useEffect(() => {\n        request()\n    }, [])\n\n    const request = async () => {\n        const data = await axiosRequest(queryStyle(srcLang, targetLang, query))\n        console.log(data)\n        setResult(data.translated_text)\n    }\n\n    const onChangeLang = (event) => {\n        const { value, name } = event.target\n        console.log(value, name)\n        if (name === \"src\") {\n            setSrcLang(value)\n        } else if (name === \"target\") {\n            setTargetLang(value)\n        }\n    }\n    const onChangeQuery = (event) => {\n        const { value } = event.target\n        setQuery(value)\n    }\n    return (\n        <>\n            <NavBar title={\"Transpi\"} />\n            <Body>\n                <TransBox>\n                    <TransBoxHeader>\n                        <TransBoxLangDiv>\n                            <div\n                                style={{\n                                    fontWeight: \"bold\",\n                                    marginBottom: \"0.5rem\",\n                                }}\n                            >\n                                번역할 언어\n                            </div>\n                            <TransBoxLangInput value={srcLang} onChange={onChangeLang} name=\"src\">\n                                {langData}\n                            </TransBoxLangInput>\n                        </TransBoxLangDiv>\n                        <TransBoxLangDiv>\n                            <div\n                                style={{\n                                    fontWeight: \"bold\",\n                                    marginBottom: \"0.5rem\",\n                                }}\n                            >\n                                번역될 언어\n                            </div>\n                            <TransBoxLangInput\n                                value={targetLang}\n                                onChange={onChangeLang}\n                                name=\"target\"\n                            >\n                                {langData}\n                            </TransBoxLangInput>\n                        </TransBoxLangDiv>\n                    </TransBoxHeader>\n                    <TransBoxBody>\n                        <TransBoxTextInput value={query} onChange={onChangeQuery} />\n                        <TransBoxTextInput\n                            style={{\n                                borderRight: \"none\",\n                            }}\n                            readOnly\n                            value={result}\n                        ></TransBoxTextInput>\n                    </TransBoxBody>\n                </TransBox>\n                <TransBoxButtonDiv>\n                    <Button onClick={() => request()}>번역하기</Button>\n                </TransBoxButtonDiv>\n            </Body>\n            <Footer intro={intro} />\n        </>\n    )\n}\n\nconst Body = styled.div`\n    padding: 1rem;\n    height: 80vh;\n    background-color: #f2f2f2;\n    padding: 3rem;\n`\n\nconst TransBox = styled.div`\n    width: 100%;\n    height: 90%;\n    background-color: white;\n    border: 1px solid #ced4da;\n`\nconst TransBoxHeader = styled.div`\n    width: 100%;\n    height: 20%;\n    border-bottom: 1px solid #ced4da;\n    display: flex;\n`\nconst TransBoxLangDiv = styled.div`\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`\nconst TransBoxLangInput = styled.select`\n    padding: 1rem;\n    outline: none;\n    border: 1px solid #ced4da;\n    width: 300px;\n`\nconst TransBoxBody = styled.div`\n    display: flex;\n    height: 100%;\n`\nconst TransBoxTextInput = styled.textarea`\n    flex: 1;\n    height: 80%;\n    outline: none;\n    resize: none;\n    border: none;\n    border-right: 1px solid #ced4da;\n    font-size: 20px;\n    padding: 1rem;\n`\nconst TransBoxButtonDiv = styled.div`\n    margin: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport default App\n","import lang from \"data/langList.json\"\n\nexport const getAllLangList = () => {\n    return lang.map((item, index) => (\n        <option value={`${item}`} key={index}>\n            {item}\n        </option>\n    ))\n}\n","import App from \"components/App\"\nimport React from \"react\"\n\nfunction Root() {\n    return (\n        <>\n            <App />\n        </>\n    )\n}\n\nexport default Root\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Root from \"Root\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Root />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}